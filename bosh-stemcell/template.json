{
    "variables": {
        "ovf_tool_path": null,
        "aws_access_key": null,
        "aws_secret_key": null,
        "build_identifier": null
    },
    "builders": [
        {
            "type": "amazon-ebs",
            "access_key": "{{ user `aws_access_key` }}",
            "secret_key": "{{ user `aws_secret_key` }}",
            "instance_type": "c1.medium",
            "region": "us-east-1",
            "source_ami": "ami-408c7f28",
            "ssh_username": "ubuntu",
            "ssh_timeout": "20m",
            "ami_name": "bosh-stemcell {{ isotime | clean_ami_name }}",
            "ami_block_device_mappings": [ {
                "device_name": "/dev/sda1",
                "volume_size": 32,
                "delete_on_termination": true
            } ],
            "launch_block_device_mappings": [ {
                "device_name": "/dev/sda1",
                "volume_size": 32,
                "delete_on_termination": true
            } ]
        },
        {
            "type": "virtualbox-iso",
            "iso_checksum": "3bfa6eac84d527380d0cc52db9092cde127f161e",
            "iso_checksum_type": "sha1",
            "iso_url": "http://releases.ubuntu.com/14.04/ubuntu-14.04.2-server-amd64.iso",
            "boot_wait": "10s",
            "boot_command": [
                "<esc><wait>",
                "<esc><wait>",
                "<enter><wait>",
                "/install/vmlinuz<wait>",
                " auto<wait>",
                " console-setup/ask_detect=false<wait>",
                " console-setup/layoutcode=us<wait>",
                " console-setup/modelcode=pc105<wait>",
                " debconf/frontend=noninteractive<wait>",
                " debian-installer=en_US<wait>",
                " fb=false<wait>",
                " initrd=/install/initrd.gz<wait>",
                " kbd-chooser/method=us<wait>",
                " keyboard-configuration/layout=USA<wait>",
                " keyboard-configuration/variant=USA<wait>",
                " locale=en_US<wait>",
                " netcfg/get_domain=vm<wait>",
                " netcfg/get_hostname=ubuntu<wait>",
                " noapic<wait>",
                " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg<wait>",
                " -- <wait>",
                "<enter><wait>"
            ],
            "http_directory": "http",
            "shutdown_command": "echo 'shutdown -P now' > shutdown.sh; echo 'c1oudc0w' | sudo -S sh 'shutdown.sh'",
            "ssh_wait_timeout": "20m",
            "guest_os_type": "Ubuntu_64",
            "guest_additions_path": "VBoxGuestAdditions_{{ .Version }}.iso",
            "virtualbox_version_file": "/home/ubuntu/.vbox_version",
            "ssh_username": "ubuntu",
            "ssh_password": "c1oudc0w",
            "vboxmanage": [
                [
                    "modifyvm",
                    "{{ .Name }}",
                    "--memory",
                    "1024"
                ],
                [
                    "modifyvm",
                    "{{ .Name }}",
                    "--cpus",
                    "2"
                ],
				[
					"modifyvm",
					"{{ .Name }}",
					"--longmode",
					"on"
				]
            ]
        }
    ],
    "provisioners": [
        {
            "type": "file",
            "source": "{{ user `ovf_tool_path` }}",
            "destination": "/tmp/install_ovf_tool.sh"
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/sudoers.sh",
                "scripts/sshd.sh",
                "scripts/update.sh",
                "scripts/ovf_tool.sh",
                "scripts/packages.sh"
            ],
            "override": {
                "amazon-ebs": {
                    "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} OVF_TOOL_PATH=/tmp/install_ovf_tool.sh sudo -E '{{ .Path }}'"
                },

                "virtualbox-iso": {
                    "execute_command": "echo 'c1oudc0w' | {{ .Vars }} OVF_TOOL_PATH=/tmp/install_ovf_tool.sh sudo -E -S bash '{{ .Path }}'"
                }
            }
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/vagrant.sh"
            ],
            "override": {
                "amazon-ebs": {
                    "execute_command": "/bin/true"
                },

                "virtualbox-iso": {
                    "execute_command": "echo 'c1oudc0w' | {{ .Vars }} VBOX_VERSION_FILE=/home/ubuntu/.vbox_version sudo -E -S bash '{{ .Path }}'"
                }
            }
        },
        {
            "type": "chef-solo",
            "cookbook_paths": ["cookbooks"],
            "run_list": [
                "ruby_build",
                "rbenv::system"
            ],
            "json": {
                "rbenv": {
                    "rubies": ["1.9.3-p448"],
                    "global": "1.9.3-p448",
                    "gems": {
                        "1.9.3-p448": [{
                            "name": "bundler"
                        }]
                    }
                }
            }
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/cleanup.sh",
                "scripts/minimize.sh"
            ],
            "override": {
                "amazon-ebs": {
                    "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E '{{ .Path }}'"
                },

                "virtualbox-iso": {
                    "execute_command": "echo 'c1oudc0w' | {{ .Vars }} sudo -E -S bash '{{ .Path }}'"
                }
            }
        }
    ],

    "post-processors": [
        {
            "output": "bosh-stemcell-{{ user `build_identifier` }}-{{ .Provider }}.box",
            "type": "vagrant",
            "keep_input_artifact": true
        }
    ]
}
